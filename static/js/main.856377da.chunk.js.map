{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/Nav/Nav.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickHandler","id","Wrapper","children","Title","Nav","title","score","topScore","win","loss","shuffleArray","array","i","length","j","Math","floor","random","_ref","App","state","friends","selected","changeFriendPosition","_this","setState","friendsPosition","console","log","indexOf","incrementHandler","concat","Object","toConsumableArray","resetHandler","newScore","newLoss","_this2","this","components_Nav_Nav","components_Wrapper_Wrapper","components_Title_Title","map","friend","components_FriendCard_FriendCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.856377da.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n    <div className=\"content\">\n      <ul>\n        <li>\n          <strong>Name:</strong> {props.name}\n        </li>\n        \n      </ul>\n    </div>\n    {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n     \n    </span> */}\n    <div onClick={() => props.clickHandler(props.id)} \n    className=\"remove\">\n    ùòÖ\n    </div>\n  </div>\n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\n\nexport default Title;\n","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = props => (\n\n<nav   className=\"nav\">{props.children} \n    <ul>\n        <li>{props.title}</li>\n        <li>{props.score}</li>\n        <li>{props.topScore}</li>\n        <li>{props.win}</li>\n        <li>{props.loss}</li>\n\n\n\n    </ul>\n\n\n\n</nav>\n\n);\nexport default Nav;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Nav from \"./components/Nav\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\n\nfunction shuffleArray(array){\n  \n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    topScore:0,\n    win:0,\n    loss:0,\n    selected:[]\n\n  };\n/////////randomly selects the pictures using the previous loop//////\n  changeFriendPosition = (id) => {\n    \n    this.setState({friendsPosition: shuffleArray(friends) });\n\n     //this.incrementHandler()\n     this.clickHandler (id)\n\n  }\n  ///check for double click for the same image////\n\n  clickHandler = (id)=> {\n    console.log(id, \"Was clicked\")\n    if (this.state.selected.indexOf(id) ===-1) {\n      \n      this.incrementHandler();\n      this.setState({ selected: [...this.state.selected,id ] });\n    } \n    else{\n      this.resetHandler()\n    }\n      \n    \n    //console.log(clickHandler);\n  };\n  \n\n  incrementHandler = ()=> {\n    \n    const newScore= this.state.score +1;\n    this.setState({\n      score: newScore,\n      \n    })\n    if (newScore >= this.state.topScore ){this.setState ({topScore: newScore })\n\n  }\n   if (newScore % 12===0){\n    this.setState({\n      win : this.state.win +1})\n   \n  }\n\n  if (newScore % 12===0){\n    this.setState({\n      score : 0 })\n}\n  \n  \n    }\n    \n \nresetHandler = ()=> {\n  const newLoss = this.state.loss +1;\n  this.setState ({\n    loss:newLoss,\n  })\n    if( newLoss >= this.state.loss){\n      this.setState({loss: newLoss})\n\n    }\n  \n    \n    // selected: [],\n    \n\n \n  // this.changeFriendPosition();\n}\n\n\n \n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n    <div>\n      \n      <Nav >\n      <ul>\n          \n         <li> <p>Click X to start</p></li>\n    \n          <li>\n          score= {this.state.score} |\n          topScore={this.state.topScore},\n          </li>\n          \n          <li>\n          win={this.state.win},\n          loss={this.state.loss},\n          </li>\n          </ul>\n\n        </Nav>\n      <Wrapper>\n        \n        <Title> \"Clicky -Game\"\n        <p>Do not clik the same picture twice</p>\n        </Title>\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n          // removeFriend={this.removeFriend}\n          clickHandler={this.changeFriendPosition}\n          // resetHandler={this.resetHandler}\n          // scoreHandler={this.scoreHandler}\n\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            // occupation={friend.occupation}\n            // location={friend.location}\n          />\n        ))}\n      </Wrapper>\n    </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}